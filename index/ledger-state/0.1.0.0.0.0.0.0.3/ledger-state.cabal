cabal-version:      2.2
name:               ledger-state
version:            0.1.0.0.0.0.0.0.3
license:            Apache-2.0
maintainer:         operations@iohk.io
author:             IOHK
description:
    This is a tool that helps us experiment with the Ledger State

build-type:         Simple
extra-source-files:
    README.md
    ChangeLog.md

source-repository head
    type:     git
    location: https://github.com/input-output-hk/cardano-ledger.git
    subdir:   libs/ledger-state

library
    exposed-modules:
        Cardano.Ledger.State.UTxO
        Cardano.Ledger.State.Orphans
        Cardano.Ledger.State.Schema
        Cardano.Ledger.State.Transform
        Cardano.Ledger.State.Query
        Cardano.Ledger.State.Vector

    hs-source-dirs:   src
    default-language: Haskell2010
    ghc-options:
        -Wall -Wcompat -Wincomplete-record-updates
        -Wincomplete-uni-patterns -Wredundant-constraints -Wunused-packages

    build-depends:
        base >=4.12 && <4.17,
        bytestring,
        cardano-binary,
        cardano-data,
        cardano-crypto-class,
        cardano-ledger-core,
        cardano-ledger-alonzo,
        cardano-ledger-shelley,
        cardano-ledger-shelley-ma,
        conduit,
        containers,
        vector-map,
        deepseq,
        foldl,
        vector,
        microlens,
        persistent,
        persistent-sqlite,
        prettyprinter,
        set-algebra,
        strict-containers,
        text,
        transformers

executable ledger-state
    main-is:          Main.hs
    hs-source-dirs:   app
    default-language: Haskell2010
    ghc-options:
        -Wall -Wcompat -Wincomplete-record-updates
        -Wincomplete-uni-patterns -Wredundant-constraints -Wunused-packages
        -O2 -threaded -rtsopts

    build-depends:
        base >=4.12 && <4.17,
        cardano-ledger-shelley,
        ledger-state,
        optparse-applicative,
        text

benchmark memory
    type:             exitcode-stdio-1.0
    main-is:          Memory.hs
    hs-source-dirs:   bench
    default-language: Haskell2010
    ghc-options:      -Wall -O2 -rtsopts
    build-depends:
        base,
        deepseq,
        weigh,
        ledger-state,
        optparse-applicative,
        text

benchmark performance
    type:             exitcode-stdio-1.0
    main-is:          Performance.hs
    hs-source-dirs:   bench
    default-language: Haskell2010
    ghc-options:
        -Wall -Wcompat -Wincomplete-record-updates
        -Wincomplete-uni-patterns -Wredundant-constraints -Wunused-packages
        -threaded -rtsopts -O2

    build-depends:
        base >=4.12 && <4.17,
        base,
        aeson >=2,
        bytestring,
        base16-bytestring,
        cardano-binary,
        cardano-data,
        cardano-ledger-alonzo,
        cardano-ledger-core,
        cardano-ledger-shelley,
        cardano-slotting,
        containers,
        criterion,
        data-default-class,
        deepseq,
        ledger-state,
        microlens,
        random

benchmark address
    type:             exitcode-stdio-1.0
    main-is:          Address.hs
    hs-source-dirs:   bench
    default-language: Haskell2010
    ghc-options:
        -Wall -Wcompat -Wincomplete-record-updates
        -Wincomplete-uni-patterns -Wredundant-constraints -Wunused-packages
        -threaded -rtsopts -O2

    build-depends:
        base >=4.12 && <4.17,
        base,
        bytestring,
        cardano-binary,
        cardano-crypto-class,
        cardano-ledger-core,
        cardano-slotting,
        criterion,
        deepseq,
        strict-containers,
        text
